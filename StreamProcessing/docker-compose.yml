version: '3.1'

services:

  kafka:
    image: wurstmeister/kafka:2.12-2.2.0
    container_name: kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CREATE_TOPICS: "traffic_data:4:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  zookeeper:
    image: zookeeper
    container_name: zookeeper
    restart: always
    ports:
      - 2181:2181

  nimbus:
    image: storm:2.0.0
    container_name: nimbus
    command: storm nimbus
    depends_on:
      - zookeeper
    links:
      - zookeeper
    restart: always
    ports:
      - 6627:6627
    volumes:
      - ./storm/storm.yaml:/conf/storm.yaml

  supervisor_1:
    image: storm:2.0.0
    command: storm supervisor
    container_name: supervisor_1
    depends_on:
      - nimbus
      - zookeeper
    links:
      - nimbus
      - zookeeper
    restart: always
    volumes:
      - ./storm/storm.yaml:/conf/storm.yaml

  supervisor_2:
    image: storm:2.0.0
    command: storm supervisor
    container_name: supervisor_2
    depends_on:
      - nimbus
      - zookeeper
    links:
      - nimbus
      - zookeeper
    restart: always
    volumes:
      - ./storm/storm.yaml:/conf/storm.yaml

  ui:
    image: storm:2.0.0
    container_name: ui
    command: storm ui
    depends_on:
      - supervisor_1
      - supervisor_2
      - nimbus
      - zookeeper
    links:
      - supervisor_1
      - supervisor_2
      - nimbus
      - zookeeper
    restart: always
    ports:
      - 8080:8080
    volumes:
      - ./storm/storm.yaml:/conf/storm.yaml

  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      - MONGO_LOG_DIR=/dev/null
    ports:
      - 27018:27017
    command: mongod --smallfiles --logpath=/dev/null # --quiet